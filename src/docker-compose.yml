version: '3.4'

services:
  
  server:
    image: openttd.server
    container_name: tg.server
    networks:
      - tg
    build:
      context: .
      dockerfile: Services/OpenTTD/Dockerfile
  
  db:
    image: mcr.microsoft.com/mssql/server:2019-GA-ubuntu-16.04
    container_name: tg.db
    networks:
      - tg
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  seq:
    image: datalust/seq:latest
    container_name: tg.seq
    networks:
      - tg
    environment:
      ACCEPT_EULA: "Y"
  
  redis:
    image: docker.io/bitnami/redis:7.0
    container_name: tg.redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    networks:
      - tg
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: tg.zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - tg

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: tg.kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - tg
  
networks:
  tg:
    name: tg.network
