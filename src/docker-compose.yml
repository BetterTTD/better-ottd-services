version: "3.8"

name: "betterttd"

services:
  
  server:
    image: openttd.server
    container_name: bttd.server
    networks:
      - tg
    build:
      context: .
      dockerfile: Services/OpenTTD/Dockerfile
  
  db:
    image: mcr.microsoft.com/mssql/server:2019-GA-ubuntu-16.04
    container_name: bttd.db
    networks:
      - tg
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  seq:
    image: datalust/seq:latest
    container_name: bttd.seq
    networks:
      - tg
    environment:
      ACCEPT_EULA: "Y"
  
  redis:
    image: docker.io/bitnami/redis
    container_name: bttd.redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    networks:
      - tg
  
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: bttd.zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    depends_on:
      - kafka
    networks:
      - tg

  kafka:
    image: confluentinc/cp-kafka
    container_name: bttd.kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - tg

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: bttd.kafka-ui
    depends_on:
      - kafka
    ports:
      - "9090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=tg-kafka-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - tg
        
networks:
  tg:
    name: bttd.network
